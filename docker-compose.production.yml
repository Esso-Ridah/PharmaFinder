version: '3.8'

services:
  # FastAPI Backend with SQLite
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pharmafinder_backend
    environment:
      # Database (SQLite)
      - DATABASE_URL=sqlite+aiosqlite:///./pharmafinder.db

      # Security
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-jwt-key-change-this-in-production}
      - ACCESS_TOKEN_EXPIRE_MINUTES=30

      # Payment APIs
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}

      # App Configuration
      - APP_NAME=PharmaFinder
      - APP_VERSION=1.0.0
      - DEBUG=False
      - CORS_ORIGINS=["http://localhost:3000","http://localhost","https://your-domain.com"]
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app
      - backend_data:/app/data
      - backend_uploads:/app/uploads
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --workers 2
    networks:
      - pharmafinder_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8001}
        - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
    container_name: pharmafinder_frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8001}
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - pharmafinder_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: pharmafinder_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - pharmafinder_network
    restart: unless-stopped

volumes:
  backend_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  pharmafinder_network:
    driver: bridge
